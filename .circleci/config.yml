version: 2.1

jobs:              
   test-frontend:
      docker: 
         - image: python:3.7.3-stretch
      steps:
         - checkout # checkout source code from git
         - run:
             name: Install dependencies
             command: |
               cd HelloWorld
               make install
         - run:
             name: check lint
             command: |
               cd HelloWorld
               make lint

   docker-build:
      docker:
         - image: cimg/go:1.17
      working_directory: ~/repo
      steps:
         - checkout
         - setup_remote_docker:
            version: 20.10.14
            docker_layer_caching: true
         - run:
            name: build and tag docker hub
            command: |
               cd HelloWorld
               # login
               docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_PASSWORD}
               # build image
               docker build -t helloworld:latest .
               # list image
               docker images
               # push to DockerHub
               docker tag helloworld:latest ${DOCKERHUB_USERNAME}/helloworld:latest
               docker push ${DOCKERHUB_USERNAME}/helloworld:latest

   deploy-infrastructure:
      docker:
         - image: amazon/aws-cli
      steps:
         - checkout # checkout source code from git         
         - run:
            name: Install tar
            command: |
              yum -y install tar gzip gettext
         - run: 
            name: Install Kubectl
            command: |
              curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" &&\
              install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
         - run: 
            name: Install EKSctl
            command: |
              curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
              mv /tmp/eksctl /usr/local/bin
         - run:
            name: Create EKS cluster
            command: |
              cd .circleci/cloudFormations/EKS
              chmod +x create_cluster.sh
              ./create_cluster.sh
        - run:
            name: Deploy app
            command: |
              cd .circleci/deployApp
              # deploy app
              chmod +x deploy_app.sh
              ./deploy_app.sh
              # Wait for deploy success 
              kubectl wait  --for=condition=ready pod -l app=helloworld
              sleep 30s
         
workflows:
  default:
    jobs:
      - test-frontend
      - docker-build:
          requires: [test-frontend]
          filters:
            branches:
              only: [main]
      - deploy-infrastructure:
          requires: [docker-build]
